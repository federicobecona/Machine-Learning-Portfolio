[
    {
        "unidad":"Preparación de datos",
        "tarea":"Normalización sobre dataset Wine en RapidMiner",
        "descripcion":"En RapidMiner se realizó una normalización sobre el dataset Wine y se comparó la performance de aplicar Naive Bayes usando el dataset normalizado y no normalizado con un split con el 70% de ejemplos para training y 30% para test en ambos casos."
    },
    {
        "unidad":"Preparación de datos",
        "tarea":"Normalization on Wine dataset in RapidMiner",
        "descripcion":"In RapidMiner, a normalization was performed on the Wine dataset and the performance of applying Naive Bayes was compared using the normalized and non-normalized dataset with a split with 70% of examples for training and 30% for testing in both cases."
    },
    {
        "unidad":"Preparación de datos",
        "tarea":"Tutoriales de preparación de datos en RapidMiner",
        "descripcion":"En este ejercicio se hicieron tutoriales de modelado, scoring, split y validación, cross validation y visual model comparison para la herramienta RapidMiner."
    },
    {
        "unidad":"Preparación de datos",
        "tarea":"Data preparation tutorials in RapidMiner",
        "descripcion":"In this exercise, modeling, scoring, split and validation, cross validation and visual model comparison tutorials were made for the RapidMiner tool."
    },
    {
        "unidad":"Preparación de datos",
        "tarea":"Pre procesamiento de datos en Wine con Python",
        "descripcion":"Para este caso se aplican técnicas de pre procesamiento como normalización, estandarización y split en datos de training y test. Luego se obtienen estadísticas para el dataset Wine utiliando funciones de Python con SciKitLearn y la librería Pandas."
    },
    {
        "unidad":"Preparación de datos",
        "tarea":"Data pre-processing in Wine with Python",
        "descripcion":"For this case, pre-processing techniques such as normalization, standardization and split are applied to training and test data. Statistics for the Wine dataset are then obtained using Python functions with SciKitLearn and the Pandas library."
    },
    {
        "unidad":"Preparación de datos",
        "tarea":"Data pre processing y cálculo de probabilidades de sucesos sobre el dataset Titanic con Python",
        "descripcion":"Sobre el dataset Titanic se realizó un tratamiento de missing values con reemplazo, remoción, sustitución por categoría única y selección de atributos. Posteriormente se realizaron consultas probabilísticas sobre los datos."
    },
    {
        "unidad":"Preparación de datos",
        "tarea":"Data pre-processing and calculation of probabilities of events on the Titanic dataset with Python",
        "descripcion":"On the Titanic dataset, a missing value treatment was carried out with replacement, removal, substitution by single category and selection of attributes. Subsequently, probabilistic queries were made on the data."
    },
    {
        "unidad":"Preparación de datos",
        "tarea":"Selección de atributos para dataset Sonar",
        "descripcion":"Ejercicio con selección de atributos en RapidMiner sobre el dataset Sonar."    
    },
    {
        "unidad":"Preparación de datos",
        "tarea":"Selection of attributes for Sonar dataset",
        "descripcion":"Exercise with attribute selection in RapidMiner on the Sonar dataset."    
    },
    {
        "unidad":"Algoritmos lineales",
        "tarea":"Titanic",
        "descripcion":"En este caso se hace un estudio de preparación de datos para el dataset Titanic y se crean modelos de regresión logística equivalentes para RapidMiner y SciKitLearn."
    },
    {
        "unidad":"Algoritmos lineales",
        "tarea":"Titanic dataset",
        "descripcion":"In this case, a data preparation study is done for the Titanic dataset and equivalent logistic regression models are created for RapidMiner and SciKitLearn."
    },
    {
        "unidad":"Algoritmos lineales",
        "tarea":"Deportes",
        "descripcion":"Utilizaremos Análisis de Discriminante Lineal (LDA) con Sckit-learn de Python y RapidMiner para entrenar y realizar la clasificación a partir del dataset de Sports para finalmente comparar las predicciones realizadas por ambos modelos."
    },
    {
        "unidad":"Algoritmos lineales",
        "tarea":"Sports",
        "descripcion":"We will use Linear Discriminant Analysis (LDA) with Python's Sckit-learn and RapidMiner to train and classify from the Sports dataset to finally compare the predictions made by both models."
    },
    {
        "unidad":"Algoritmos lineales",
        "tarea":"Regresión lineal simple en hoja de cálculo",
        "descripcion":"Utilizando una planilla electrónica se generó un modelo de regresión linear simple calculando los coeficientes en el primer ejercicio y por descenso de gradiente en el segundo ejercicio. Para ambos casos se usaron los modelos para hacer predicciones."
    },
    {
        "unidad":"Algoritmos lineales",
        "tarea":"Simple Linear Regression in Spreadsheet",
        "descripcion":"Using an electronic spreadsheet, a simple linear regression model was generated by calculating the coefficients in the first exercise and by gradient descent in the second exercise. For both cases the models were used to make predictions."
    },
    {
        "unidad":"Algoritmos lineales",
        "tarea":"Regresión logística en planilla electrónica",
        "descripcion":"En una planilla electrónica se visualizará una función logística y se genararán modelos de regresión logística con descenso de gradiente estocástico."
    },
    {
        "unidad":"Algoritmos lineales",
        "tarea":"Logistic Regression in Spreadsheet",
        "descripcion":"A logistic function will be visualized in an electronic spreadsheet and logistic regression models will be generated with stochastic gradient descent."
    },
    {
        "unidad":"Algoritmos lineales",
        "tarea":"LDA en hoja de cálculo",
        "descripcion":"Empleando una planilla electrónica se generará un modelo de análisis de discriminante lineal LDA y con él se hará la predicción de clase para un conjunto de datos con un atributo y una salida con dos clases."
    },
    {
        "unidad":"Algoritmos lineales",
        "tarea":"LDA in Spreadsheet",
        "descripcion":"Using an electronic spreadsheet, an LDA linear discriminant analysis model will be generated and with it the class prediction will be made for a data set with one attribute and an output with two classes."
    },
    {
        "unidad":"Algoritmos lineales",
        "tarea":"Regresión lineal con descenso de gradiente",
        "descripcion":"En este ejercicio se usa una planilla electrónica para minimizar una función siguiendo los gradientes de la función de costo y luego armar un modelo de regresión lineal."
    },
    {
        "unidad":"Algoritmos lineales",
        "tarea":"Comparación de LDA con Python y RapidMiner para el dataset Sports",
        "descripcion":"Se realizan ejercicios con modelos de LDA para en Python y RapidMiner y se comparan los resultados obtenidos."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"CART para clasificación binaria simple",
        "descripcion":"Emplearemos un modelo CART para un problema de clasificación binaria simple con dos variables de entrada X1 y X2 y una variable de salida Y."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"CART for Simple Binary Classification",
        "descripcion":"We will use a CART model for a simple binary classification problem with two input variables X1 and X2 and one output variable Y."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"Árboles de decisión en KNIME",
        "descripcion":"Estudiaremos la construcción de un modelo de árbol de decisión de regresión simple en la herramienta KNIME."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"Decision Trees in KNIME",
        "descripcion":"We will study the construction of a simple regression decision tree model in the KNIME tool."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"SVM lineal con descenso de sub gradiente",
        "descripcion":"En una hoja de cálculo analizaremos el algoritmo de Support Vector Machines lineal con descenso de sub gradiente y lo utilizaremos para realizar predicciones."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"Linear SVM with Sub-Gradient Descent",
        "descripcion":"In a spreadsheet, we will discuss the Sub-Gradient Descent Linear Support Vector Machines algorithm and use it to make predictions."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"SVM no lineal en RapidMiner",
        "descripcion":"En este ejercicio se analizará el componente SVM de RapidMiner y se lo utilizará para resolver un problema no separable linealmente."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"Nonlinear SVM in RapidMiner",
        "descripcion":"In this exercise you will explore the SVM component of RapidMiner and use it to solve a linearly non-separable problem."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"Comparación de Decision Trees en herramientas de ML",
        "descripcion":"Comparación de árboles de decisión entre RapidMiner y Weka aplicados al dataset Iris. Además se analiza el componente mencionado en Azure ML Studio, KNIME y Python Sci kit learn."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"Comparison of Decision Trees in ML Tools",
        "descripcion":"Comparison of decision trees between RapidMiner and Weka applied to the Iris dataset. In addition, the mentioned component is analyzed in Azure ML Studio, KNIME and Python Sci kit learn."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"Naive Bayes en planilla electrónica",
        "descripcion":"Implementación de un modelo de Naive Bayes en una planilla electrónica."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"Naive Bayes in Spreadsheet",
        "descripcion":"Implementation of a Naive Bayes model in an electronic spreadsheet."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"KNN en hoja de cálculo y RapidMiner",
        "descripcion":"Empleo de KNN para realizar predicciones en una hoja de cálculo y RapidMiner."
    },
    {
        "unidad":"Algoritmos no lineales",
        "tarea":"KNN in Sheet calculation and RapidMiner",
        "descripcion":"Using KNN to make predictions in a spreadsheet and RapidMiner."
    },
    {
        "unidad":"No supervisado",
        "tarea":"DBSCAN en Wine",
        "descripcion":"Aplicamos el algoritmo de clustering DBSCAN para encontrar agrupaciones en el dataet Wine."
    },
    {
        "unidad":"No supervisado",
        "tarea":"DBSCAN in Wine",
        "descripcion":"We apply the DBSCAN clustering algorithm to find clusters in the Wine dataset."
    }, 
    {
        "unidad":"No supervisado",
        "tarea":"PCA para dataset Cereals",
        "descripcion":"Estudio del algoritmo PCA utilizando los datos de Cereals"
    },
    {
        "unidad":"No supervisado",
        "tarea":"PCA for Cereals dataset",
        "descripcion":"Study of the PCA algorithm using Cereals data"
    }
]